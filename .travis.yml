## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
os:
  - linux
  # - osx
julia:
  - 1.0
  - 1.1
notifications:
  email: false
git:
  depth: 99999999
env:
  global:
    - PYTHON=conda
#   matrix:
#     - NAME="Unit/Integration Tests"
#       SCRIPT="echo \"test script\""
#       AFTER="julia -e 'using Pkg; Pkg.add(\"Coverage\"); using Coverage; Codecov.submit(Codecov.process_folder())'"
#     - NAME="Documentation Test"
#       BEFORE="julia -e \"using Pkg; Pkg.add(PackageSpec(name='Documenter', version='0.19'))\""
#       SCRIPT=echo 'doc script'
#
# before_script: echo "$BEFORE" && $BEFORE
# script: echo "$SCRIPT" && $SCRIPT
# after_success: echo "$AFTER" && $AFTER
script:
 # - julia -e 'Pkg.clone(pwd()); Pkg.build("DPSABase"); Pkg.test("DPSABase"; coverage=true)'
  - echo "Julia $TRAVIS_JULIA_VERSION" && $(exit 1)
  - echo "Again Julia $TRAVIS_JULIA_VERSION"
    echo "Again 2 Julia $TRAVIS_JULIA_VERSION"
# script:
#   - "echo "Julia $TRAVIS_JULIA_VERSION"
#   - "echo "Again Julia $TRAVIS_JULIA_VERSION"

jobs:
  include:
    - stage: "Changelog Check"
      name: "Changelog Check"
      if: type IN (pull_request)
      language: minimal
      before_install:
      before_script:
      script:
        - git fetch origin master:master
        # show all changed files for debugging
        - git diff HEAD master --name-only
        # check if CHANGELOG.md has been modified
        - git diff HEAD master --name-only | grep ^CHANGELOG.md$ || (ret=$? && echo "You didn't provide the details of your change in CHANGELOG.md" && exit $ret)

# before_install:
#   - julia -e "using InteractiveUtils; versioninfo();"

# before_script:
# #  - if [ $TRAVIS_OS_NAME = osx ]; then brew install gcc; fi
#   - julia -e 'using Pkg; Pkg.add(PackageSpec(name="Documenter", version="0.19"))'
#
# # uncomment the following lines to override the default test script
# - stage: Test
#   script:
#     - julia --check-bounds=yes --color=yes --inline=no -e "using Pkg; Pkg.test(coverage=true)"
#   after_success:
#     # push coverage results to Codecov
#     - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
#   julia:
#     - 1.0
#     - 1.1
# - stage: "Documentation Test"
#   script:
#     - julia docs/make.jl
